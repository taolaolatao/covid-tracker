{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css"],"names":["module","exports","Cards","memo","confirmed","deaths","recovered","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cn","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toLocaleDateString","api","axios","create","baseURL","timeout","responseType","fetchData","country","a","urlDefault","defaults","get","data","modifiedData","fetchDailyData","map","dailyData","total","date","reportDate","fetchCountriesData","countries","name","Chart","useState","setDailyData","useEffect","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","onChange","e","target","index","key","App","state","covidDataByCountry","setState","covidData","this","image","src","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b5328bde.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React, { memo } from 'react';\nimport CountUp from 'react-countup';\nimport { Card, Typography, Grid, CardContent } from '@material-ui/core';\nimport cn from 'classnames';\nimport styles from './Cards.module.css';\n\nconst Cards = memo(({ confirmed, deaths, recovered, lastUpdate }) => {\n\tif(!confirmed) return <>Loading...</>;\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t<Grid container spacing={3} justify=\"center\">\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cn(styles.card, styles.infected)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of active cases of COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cn(styles.card, styles.recovered)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of recovered cases of COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t\t<Grid item component={Card} xs={12} md={3} className={cn(styles.card, styles.deaths)}>\n\t\t\t\t\t<CardContent>\n\t\t\t\t\t\t<Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n\t\t\t\t\t\t<Typography variant=\"h5\">\n\t\t\t\t\t\t\t<CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n\t\t\t\t\t\t<Typography variant=\"body2\">Number of deaths cases of COVID-19</Typography>\n\t\t\t\t\t</CardContent>\n\t\t\t\t</Grid>\n\t\t\t</Grid>\n\t\t</div>\n\t);\n});\n\nexport default Cards;\n","import axios from 'axios';\n\nexport const api = axios.create({\n\tbaseURL: 'https://covid19.mathdro.id/api',\n\ttimeout: 5000,\n\tresponseType: 'json'\n})\n\nexport const fetchData = async (country) => {\n\tlet urlDefault = api.defaults.baseURL;\n\n\tif(country) urlDefault += `/countries/${country}`;\n\n\ttry {\n\t\tconst { data: { confirmed, recovered, deaths, lastUpdate } } = await api.get(urlDefault);\n\t\tconst modifiedData = { confirmed, recovered, deaths, lastUpdate }\n\n\t\treturn modifiedData;\n\t} catch (error) {\n\t\treturn error;\n\t}\n}\n\nexport const fetchDailyData = async () => {\n\ttry {\n\t\tconst { data } = await api.get('/daily');\n\t\tconst modifiedData = data.map(dailyData => ({\n\t\t\tconfirmed: dailyData.confirmed.total,\n\t\t\tdeaths: dailyData.deaths.total,\n\t\t\tdate: dailyData.reportDate\n\t\t}))\n\n\t\treturn modifiedData;\n\t} catch (error) {\n\t\treturn error;\n\t}\n}\n\nexport const fetchCountriesData = async () => {\n\ttry {\n\t\tconst { data: { countries } } = await api.get('/countries');\n\n\t\treturn countries.map(country => country.name);\n\t} catch (error) {\n\t\treturn error;\n\t}\n}\n","import React, { useState, useEffect } from 'react';\nimport { Bar, Line } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../api';\nimport styles from './Chart.module.css';\n\nconst Chart = ({ data, country }) => {\n\tconst [dailyData, setDailyData] = useState([]);\n\n\tuseEffect(() => {\n\t\t(async () => setDailyData(await fetchDailyData()))();\n\t}, [])\n\n\tconst lineChart = (\n\t\tdailyData.length ? (\n\t\t\t<Line\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: dailyData.map(({ date }) => date),\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tdata: dailyData.map(({ confirmed }) => confirmed),\n\t\t\t\t\t\tlabel: 'Infected',\n\t\t\t\t\t\tborderColor: '#3333ff',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t}, {\n\t\t\t\t\t\tdata: dailyData.map(({ deaths }) => deaths),\n\t\t\t\t\t\tlabel: 'Deaths',\n\t\t\t\t\t\tborderColor: 'red',\n\t\t\t\t\t\tbackgroundColor: 'rgba(255, 0, 0, .5)',\n\t\t\t\t\t\tfill: true\n\t\t\t\t\t}]\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : null\n\t);\n\n\tconst barChart = (\n\t\tdata.confirmed ? (\n\t\t\t<Bar\n\t\t\t\tdata={{\n\t\t\t\t\tlabels: ['Infected', 'Recovered', 'Deaths'],\n\t\t\t\t\tdatasets: [{\n\t\t\t\t\t\tlabel: 'People',\n\t\t\t\t\t\tbackgroundColor: [\n\t\t\t\t\t\t\t'rgba(0, 0, 255, .5)',\n\t\t\t\t\t\t\t'rgba(0, 255, 0, .5)',\n\t\t\t\t\t\t\t'rgba(255, 0, 0, .5)'\n\t\t\t\t\t\t],\n\t\t\t\t\t\tdata: [ data.confirmed.value, data.recovered.value, data.deaths.value ]\n\t\t\t\t\t}]\n\t\t\t\t}}\n\t\t\t\toptions={{\n\t\t\t\t\tlegend: { display: false },\n\t\t\t\t\ttitle: { display: true, text: `Current state in ${country}` }\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : null\n\t);\n\n\treturn (\n\t\t<div className={styles.container}>\n\t\t\t{country ? barChart : lineChart}\n\t\t</div>\n\t);\n}\n\nexport default Chart;\n","import React, { useState, useEffect } from 'react';\nimport { FormControl, NativeSelect } from '@material-ui/core';\nimport { fetchCountriesData } from '../../api';\nimport styles from './CountryPicker.module.css';\n\nconst CountryPicker = ({ handleCountryChange }) => {\n\tconst [countries, setCountries] = useState([]);\n\n\tuseEffect(() => {\n\t\t(async () => setCountries(await fetchCountriesData()))();\n\t}, [])\n\n\treturn (\n\t\t<FormControl className={styles.formControl}>\n\t\t\t<NativeSelect onChange={e => handleCountryChange(e.target.value)}>\n\t\t\t\t<option value=\"\">Global</option>\n\t\t\t\t{countries.length ? countries.map((country, index) => <option key={index} value={country}>{country}</option>) : null}\n\t\t\t</NativeSelect>\n\t\t</FormControl>\n\t);\n}\n\nexport default CountryPicker;\n","import React from 'react';\nimport { Cards, Chart, CountryPicker } from './components';\nimport styles from './App.module.css';\nimport { fetchData } from './api';\n\nclass App extends React.Component {\n\tstate = {\n\t\tdata: {},\n\t\tcountry: ''\n\t}\n\n\tasync componentDidMount(){\n\t\tconst covidData = await fetchData();\n\t\tthis.setState({ data: covidData });\n\t}\n\n\thandleCountryChange = async country => {\n\t\tconst covidDataByCountry = await fetchData(country);\n\t\tthis.setState({ data: covidDataByCountry, country: country });\n\t}\n\n\trender() {\n\t\tconst { data, country } = this.state;\n\t\treturn (\n\t\t\t<div className={styles.container}>\n\t\t\t\t<img className={styles.image} src=\"https://i.ibb.co/7QpKsCX/image.png\" alt=\"Corona 19\" />\n\t\t\t\t<Cards {...data} />\n\t\t\t\t<CountryPicker handleCountryChange={this.handleCountryChange} />\n\t\t\t\t<Chart data={data} country={country} />\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from 'react-dom';\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById('root'));\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};"],"sourceRoot":""}